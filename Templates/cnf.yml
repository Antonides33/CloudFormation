# CloudFormation Template with Parameters, Mappings, and Comments
# This template creates an EC2 instance with a security group and uses Mappings for region-specific AMI IDs.

# AWSTemplateFormatVersion: Specifies the CloudFormation template version.
AWSTemplateFormatVersion: '2010-09-09'

# Description: A description of the template.
Description: >
  This template creates an Amazon EC2 instance with a security group.
  It demonstrates the use of Parameters, Mappings, and Outputs.

# Parameters: Define inputs that can be provided when creating or updating the stack.
Parameters:
  # InstanceType: Specifies the type of EC2 instance to launch.
  InstanceType:
    Description: The type of EC2 instance to launch (e.g., t2.micro, t2.small).
    Type: String
    Default: t2.micro  # Default value if no input is provided.
    AllowedValues:  # Restrict the input to specific values.
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: Must be a valid EC2 instance type.

  # KeyName: Specifies the name of an existing EC2 KeyPair for SSH access.
  KeyName:
    Description: The name of an existing EC2 KeyPair to enable SSH access.
    Type: AWS::EC2::KeyPair::KeyName  # AWS-specific parameter type.
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  # SSHLocation: Specifies the IP range allowed to SSH into the instance.
  SSHLocation:
    Description: The IP address range allowed to SSH into the EC2 instance.
    Type: String
    Default: 0.0.0.0/0  # Default allows access from any IP.
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'  # Regex for IP CIDR.
    ConstraintDescription: Must be a valid IP CIDR range (e.g., 192.168.1.0/24).

  # EnvironmentType: Specifies the environment type (e.g., dev, prod).
  EnvironmentType:
    Description: The type of environment (dev, prod).
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: Must be either 'dev' or 'prod'.

# Mappings: Define static values that can be selected based on a key.
# This is useful for region-specific AMI IDs or environment-specific configurations.
Mappings:
  # RegionMap: Maps AWS regions to their corresponding AMI IDs.
  RegionMap:
    us-east-1:
      AMI: ami-0abcdef1234567890  # Replace with a valid AMI ID for us-east-1.
    us-west-1:
      AMI: ami-0abcdef1234567891  # Replace with a valid AMI ID for us-west-1.
    eu-west-1:
      AMI: ami-0abcdef1234567892  # Replace with a valid AMI ID for eu-west-1.

  # EnvironmentConfig: Maps environment types to instance configurations.
  EnvironmentConfig:
    dev:
      InstanceType: t2.micro  # Use a smaller instance for development.
    prod:
      InstanceType: t2.medium  # Use a larger instance for production.

# Resources: Define the AWS resources to be created.
Resources:
  # MyEC2Instance: Creates an EC2 instance.
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !FindInMap [EnvironmentConfig, !Ref EnvironmentType, InstanceType]  # Use Mappings to select instance type.
      KeyName: !Ref KeyName  # Refers to the KeyName parameter.
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]  # Use Mappings to select AMI ID based on region.
      SecurityGroups:
        - !Ref InstanceSecurityGroup  # Refers to the security group defined below.

  # InstanceSecurityGroup: Creates a security group for the EC2 instance.
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22  # Allows SSH access on port 22.
          ToPort: 22
          CidrIp: !Ref SSHLocation  # Refers to the SSHLocation parameter.

# Outputs: Define values to be returned after the stack is created.
Outputs:
  # InstanceId: Outputs the ID of the created EC2 instance.
  InstanceId:
    Description: The Instance ID of the newly created EC2 instance.
    Value: !Ref MyEC2Instance  # Refers to the EC2 instance resource.

  # PublicIP: Outputs the public IP address of the EC2 instance.
  PublicIP:
    Description: The public IP address of the EC2 instance.
    Value: !GetAtt MyEC2Instance.PublicIp  # Retrieves the PublicIp attribute of the instance.
